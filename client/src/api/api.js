import axios from 'axios';

// ‚úÖ baseURL ÏÑ§Ï†ï: Î∞∞Ìè¨ ÌôòÍ≤ΩÍ≥º Î°úÏª¨ ÌôòÍ≤Ω ÏûêÎèô Í∞êÏßÄ
const baseURL = process.env.REACT_APP_BASE_URL
  ? `${process.env.REACT_APP_BASE_URL}/api` // Î∞∞Ìè¨Îêú ÌôòÍ≤Ω
  : 'http://localhost:5000/api'; // Î°úÏª¨ ÌôòÍ≤Ω

// ‚úÖ ÌòÑÏû¨ Ïó∞Í≤∞Îêú ÏÑúÎ≤Ñ Î°úÍ∑∏ Ï∂úÎ†•
console.log(`üåê Axios Base URL: ${baseURL}`);

// ‚úÖ Axios Ïù∏Ïä§ÌÑ¥Ïä§ ÏÉùÏÑ±
const api = axios.create({
  baseURL: baseURL,
  headers: {
    'Content-Type': 'application/json',
  },
});

// ‚úÖ ÏöîÏ≤≠ Ïù∏ÌÑ∞ÏÖâÌÑ∞: ÌÜ†ÌÅ∞ Ï∂îÍ∞Ä Î∞è ÏöîÏ≤≠ Î°úÍπÖ
api.interceptors.request.use(
  (config) => {
    const token = localStorage.getItem('accessToken');
    if (token) {
      config.headers['Authorization'] = `Bearer ${token}`;
    }
    console.log('üöÄ [REQUEST] Sending to:', config.baseURL + config.url); // ÏöîÏ≤≠ Ï£ºÏÜå Ï∂úÎ†•
    return config;
  },
  (error) => {
    console.error('‚ùå [REQUEST ERROR]:', error);
    return Promise.reject(error);
  },
);

// ‚úÖ ÏùëÎãµ Ïù∏ÌÑ∞ÏÖâÌÑ∞: ÏùëÎãµ Î°úÍπÖ Î∞è ÏóêÎü¨ Ï≤òÎ¶¨
api.interceptors.response.use(
  (response) => {
    console.log(
      '‚úÖ [RESPONSE] From:',
      response.config.baseURL + response.config.url,
    );
    return response;
  },
  (error) => {
    console.error('‚ùå [RESPONSE ERROR]:', error);
    return Promise.reject(error);
  },
);

export default api;
